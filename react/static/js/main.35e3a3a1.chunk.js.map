{"version":3,"sources":["components/Header/Header.module.css","serviceWorker.js","components/Header/Header.js","components/Main/Main.js","components/Friends/Friends.js","components/Aside/Aside.js","components/Aside/AsideContainer.js","redux/profile-reducer.js","components/Profile/MyPosts/Posts/Post.js","components/Profile/MyPosts/MyPosts.js","components/Profile/MyPosts/MyPostsContainer.js","components/Profile/ProfileInfo/ProfileInfo.js","components/Profile/Profile.js","components/Setting/Setting.js","redux/dialogs-reducer.js","components/Dialogs/DialogItem/DialogItem.js","components/Dialogs/Message/Message.js","components/Dialogs/Dialogs.js","components/Dialogs/DialogsContainer.js","components/Users/Users.js","components/Users/UsersContainer.js","App.js","redux/aside-reducer.js","redux/redux-store.js","index.js"],"names":["module","exports","main_header","logo","Boolean","window","location","hostname","match","Header","react_default","a","createElement","className","s","src","alt","Main","Friends","props","ava","name","style","backgroundImage","concat","Aside","friends","friendsData","map","f","i","components_Friends_Friends","key","react_router_dom","exact","to","activeClassName","AsideContainer","connect","state","aside","initialState","textareaDefault","noEditTextearea","postData","id","message","like","profileReducer","arguments","length","undefined","action","type","newPost","stateCopy","Object","objectSpread","toConsumableArray","push","text","Post","MyPosts","onPostClick","onChangeTextareaChange","postEl","p","Posts_Post","newPostEl","React","createRef","onChange","current","value","ref","placeholder","onClick","MyPostsContainer","profilePage","dispatch","onChangeTextareaAction","ProfileInfo","Profile","Profile_ProfileInfo_ProfileInfo","MyPosts_MyPostsContainer","Setting","dialogsData","messageData","author","dialogsReducer","DialogItem","path","Message","Dialogs","_props$dialogsPage","dialogsPage","onChangeDialogTextarea","onAddPostDialog","dialogsEl","d","Dialogs_DialogItem_DialogItem","messagesEl","m","Dialogs_Message_Message","e","target","DialogsContainer","changeTextareaDialogAction","Users","UserContainer","App","components_Header_Header","Aside_AsideContainer","react_router","component","Content","render","components_Profile_Profile","UsersContainer","Dialogs_DialogsContainer","asideReducer","reducers","combineReducers","store","createStore","ReactDOM","es","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.35e3a3a1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"main_header\":\"Header_main_header__3mgqP\",\"logo\":\"Header_logo__NUiPt\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\r\nimport s from './Header.module.css';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header className={s.main_header}>\r\n            <div>\r\n                <div className={s.logo}>\r\n                    <img src=\"https://cdn.worldvectorlogo.com/logos/slack-1.svg\" alt=\"\"/>\r\n                </div>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;\r\n\r\n","import React from \"react\";\r\n\r\nconst Main = () => {\r\n  return (\r\n      <section>\r\n        <div className=\"banner\">\r\n          <img src=\"http://naturawaxspa.com/wp-content/uploads/2017/08/forhim-banner.jpg\" alt=\"\"/>\r\n        </div>\r\n\r\n        <h1>Головна сторінка</h1>\r\n\r\n        <p>\r\n          Сайт розроблений як соціальна мережа. Lorem ipsum dolor sit amet, consectetur adipisicing elit. Accusantium aliquid atque, commodi dicta doloribus exercitationem facere magnam, maxime neque nesciunt provident quis sapiente totam! Distinctio earum inventore numquam odit perferendis?\r\n        </p>\r\n      </section>\r\n  )\r\n}\r\n\r\nexport default Main;\r\n","import React from 'react';\r\n\r\nconst Friends = (props) => {\r\n  const{ava, name} = props;\r\n  return(\r\n    <div className='friend'>\r\n      <div className='ava' style={{backgroundImage: `url(${ava})`}}/>\r\n      <div className=\"name\">{name}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Friends;\r\n","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport Friends from '../Friends/Friends';\r\n\r\nconst Aside = (props) => {\r\n  const {friendsData} = props;\r\n  const friends = friendsData.map((f,i) => <Friends key={i} name={f.name} ava={f.ava}/>);\r\n\r\n  return (\r\n    <aside className='aside'>\r\n      <nav className={'main-nav'}>\r\n        <ul>\r\n          <li>\r\n            <NavLink exact to='/' activeClassName='active-link'>Головна</NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink to='/profile' activeClassName='active-link'>Профіль</NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink to='/users' activeClassName='active-link'>Підписники</NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink to='/dialogs' activeClassName='active-link'>Повідомлення</NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink to='/setting' activeClassName='active-link'>Налаштування</NavLink>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n\r\n      <h2>Друзі</h2>\r\n      <div className=\"friends-section\">\r\n        {friends}\r\n      </div>\r\n    </aside>\r\n  )\r\n};\r\n\r\nexport default Aside;\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport Aside from './Aside';\r\n\r\nlet mapStateToProps = (state) => {\r\n  return{\r\n    friendsData: state.aside.friendsData\r\n  }\r\n};\r\n\r\nconst AsideContainer = connect(mapStateToProps)(Aside);\r\n\r\nexport default AsideContainer;\r\n\r\n","const ON_CHANGE_TEXTAREA = 'ON-CHANGE-TEXTAREA';\r\nconst ADD_POST = 'ADD-POST';\r\n\r\nlet initialState = {\r\n  textareaDefault: 'Текст повідомлення',\r\n  noEditTextearea: 'Текст повідомлення',\r\n  postData: [\r\n    {\r\n      id: 1,\r\n      ava: 'https://upload.wikimedia.org/wikipedia/commons/f/fa/Girl_in_blue_kimono.jpg',\r\n      message: 'Повідомлення перше',\r\n      like: '1'\r\n    }\r\n  ]\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_POST: {\r\n      let newPost = {\r\n        id: 5,\r\n        message: state.textareaDefault,\r\n        like: 1,\r\n        ava: 'https://upload.wikimedia.org/wikipedia/commons/f/fa/Girl_in_blue_kimono.jpg',\r\n        name: 'Mia'\r\n      };\r\n\r\n      let stateCopy = {...state};\r\n      stateCopy.postData = [...state.postData];\r\n      stateCopy.postData.push(newPost);\r\n      stateCopy.textareaDefault = state.noEditTextearea;\r\n      return stateCopy;\r\n    }\r\n    case ON_CHANGE_TEXTAREA: {\r\n      let stateCopy = {...state};\r\n      stateCopy.textareaDefault = action.text;\r\n      return stateCopy;\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const addPostAction = () => ({ type: ADD_POST });\r\nexport const onChangeTextareaAction = (text) => ({ type: ON_CHANGE_TEXTAREA, text: text });\r\n\r\nexport default profileReducer;\r\n","import React from 'react';\r\n\r\nconst Post = (props) => {\r\n  const{message, like, ava} = props;\r\n\r\n  return (\r\n    <div className='post-block'>\r\n      <div className=\"logo\" style={{backgroundImage: `url(${ava})`}}>&nbsp;</div>\r\n\r\n      <div className=\"message\">\r\n        {message}\r\n      </div>\r\n\r\n      <div className={'like'}>\r\n        Кількість Like: {like}\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Post;\r\n","import React from 'react';\r\nimport Post from \"./Posts/Post\";\r\n\r\nconst MyPosts = (props) => {\r\n  const {onPostClick, onChangeTextareaChange, postData, textareaDefault} = props;\r\n  const postEl = postData.map((p, i) => <Post key={i} message={p.message} like={p.like} ava={p.ava}/>);\r\n\r\n  let newPostEl = React.createRef();\r\n\r\n  let addPostClick = () => {\r\n    onPostClick();\r\n  };\r\n\r\n  let changeTextareaChange = () => {\r\n    let text = newPostEl.current.value;\r\n    onChangeTextareaChange(text);\r\n  };\r\n\r\n  return (\r\n    <div className='posts-block'>\r\n      <header>\r\n        <h2>Мої повідомлення</h2>\r\n        <textarea onChange={changeTextareaChange}\r\n                  ref={newPostEl}\r\n                  placeholder=\"Текст повідомлення\"\r\n                  value={textareaDefault}\r\n        />\r\n        <button onClick={addPostClick}>Створити повідомлення</button>\r\n      </header>\r\n\r\n      {postEl}\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default MyPosts;\r\n","import React from 'react';\r\nimport {addPostAction, onChangeTextareaAction} from '../../../redux/profile-reducer.js';\r\nimport MyPosts from './MyPosts';\r\nimport {connect} from 'react-redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n  return{\r\n    postData: state.profilePage.postData,\r\n    textareaDefault: state.profilePage.textareaDefault\r\n  }\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return{\r\n    onPostClick: () => {\r\n      dispatch(addPostAction());\r\n    },\r\n    onChangeTextareaChange: (text) => {\r\n      dispatch(onChangeTextareaAction(text));\r\n    }\r\n  }\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","import React from 'react';\r\n\r\nconst ProfileInfo = () => {\r\n  return(\r\n    <div className=\"account\">\r\n      ava + description\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default ProfileInfo;\r\n","import React from 'react';\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\n\r\nconst Profile = () => {\r\n  return(\r\n    <div className='content-profile'>\r\n      <ProfileInfo/>\r\n      <MyPostsContainer/>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\n\r\nconst Setting = () => {\r\n    return (\r\n        <div>\r\n          Налаштування\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Setting;\r\n\r\n","const CHANGE_DIALOG_TEXTAREA = 'CHANGE-DIALOG-TEXTAREA';\r\nconst ADD_POST_DIALOG = 'ADD-POST-DIALOG';\r\n\r\nlet initialState = {\r\n  textareaDefault: 'Текст повідомлення',\r\n  noEditTextearea: 'Текст повідомлення',\r\n  dialogsData: [\r\n    {id: 1, name: 'Mia'},\r\n    {id: 2, name: 'Beverly'},\r\n    {id: 3, name: 'Marilyn'},\r\n    {id: 4, name: 'Eva'},\r\n  ],\r\n  messageData: [\r\n    {\r\n      id: 1,\r\n      name: 'Mia',\r\n      ava: 'https://upload.wikimedia.org/wikipedia/commons/f/fa/Girl_in_blue_kimono.jpg',\r\n      message: 'Lorem ipsum dolor'\r\n    },\r\n    {\r\n      id: 2,\r\n      name: 'Me',\r\n      author: true,\r\n      ava: 'https://i.work.ua/sent_photo/f/8/7/f87e96e9b571602f6fa2181c95d79b00.jpg',\r\n      message: 'Lorem ipsum dolor sit amet.'\r\n    }\r\n  ]\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_POST_DIALOG:\r\n      let newPost = {\r\n        id: 1,\r\n        name: 'Mia',\r\n        ava: 'https://upload.wikimedia.org/wikipedia/commons/f/fa/Girl_in_blue_kimono.jpg',\r\n        message: state.textareaDefault\r\n      };\r\n\r\n      return {\r\n        ...state,\r\n        messageData: [...state.messageData, newPost],\r\n        textareaDefault: state.noEditTextearea\r\n      };\r\n\r\n    case CHANGE_DIALOG_TEXTAREA:\r\n      return{\r\n        ...state,\r\n        textareaDefault: action.text\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const addPostDialogsAction = () => ({ type: ADD_POST_DIALOG });\r\nexport const changeTextareaDialogAction = (text) => ({ type: CHANGE_DIALOG_TEXTAREA, text: text });\r\n\r\nexport default dialogsReducer;\r\n","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst DialogItem = (props) => {\r\n  const path = `/dialogs/${props.id}`;\r\n  return (\r\n    <li>\r\n      <NavLink to={path} activeClassName='active-dialog'>{props.name}</NavLink>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default DialogItem;\r\n\r\n","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst Message = (props) => {\r\n  return (\r\n    <div className={`item ${props.author ? 'left' : ''}`}>\r\n      <div className=\"info\">\r\n        <div className=\"ava\" style={{backgroundImage: `url(${props.ava})`}}/>\r\n        <div className=\"name\">{props.name}</div>\r\n      </div>\r\n\r\n      <div className=\"message\">{props.message}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Message;\r\n\r\n","import React from 'react';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport Message from './Message/Message';\r\n\r\nconst Dialogs = (props) => {\r\n  const {dialogsData, messageData, textareaDefault} = props.dialogsPage;\r\n  const {onChangeDialogTextarea, onAddPostDialog} = props;\r\n\r\n  const dialogsEl = dialogsData.map((d, i) => <DialogItem key={i} name={d.name} id={d.id}/>);\r\n  const messagesEl = messageData.map((m,i) => <Message key={i} author={m.author} name={m.name} ava={m.ava} message={m.message}/>);\r\n\r\n  let changeDialogTextarea = (e) => {\r\n    let text = e.target.value;\r\n    onChangeDialogTextarea(text)\r\n  };\r\n  let addPostDialog = () => {\r\n    onAddPostDialog();\r\n  };\r\n\r\n  return (\r\n    <div className='page-dialogs'>\r\n      <h1>Повідомлення</h1>\r\n\r\n      <div className=\"message-dialogs\">\r\n        <ul className='dialogs'>\r\n          {dialogsEl}\r\n        </ul>\r\n\r\n        <div className=\"messages\">\r\n          {messagesEl}\r\n        </div>\r\n\r\n        <div className=\"dialogs-send-message\">\r\n          <textarea\r\n            onChange={changeDialogTextarea}\r\n            value={textareaDefault}\r\n          />\r\n          <button className=\"btn\" onClick={addPostDialog}>Відправити повідомлення</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dialogs;\r\n\r\n","import React from 'react';\r\nimport {addPostDialogsAction, changeTextareaDialogAction} from '../../redux/dialogs-reducer.js';\r\nimport Dialogs from './Dialogs';\r\nimport {connect} from 'react-redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    dialogsPage: state.dialogsPage\r\n  }\r\n};\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onChangeDialogTextarea: (text) => {\r\n      dispatch(changeTextareaDialogAction(text));\r\n    },\r\n    onAddPostDialog: () => {\r\n      dispatch(addPostDialogsAction());\r\n    }\r\n  }\r\n};\r\n\r\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs);\r\n\r\nexport default DialogsContainer;\r\n\r\n","import React from 'react';\r\n\r\nconst Users = () => {\r\n  return(\r\n    <div>\r\n      Users\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Users;\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport Users from './Users';\r\n\r\nlet mapStateToProps = (state) => {\r\n\r\n};\r\nconst UserContainer = connect(mapStateToProps)(Users);\r\n\r\nexport default UserContainer;\r\n","import React from 'react';\r\nimport {Route} from 'react-router-dom';\r\nimport Header from './components/Header/Header';\r\nimport Content from './components/Main/Main';\r\nimport AsideContainer from './components/Aside/AsideContainer';\r\nimport Profile from './components/Profile/Profile';\r\nimport Setting from './components/Setting/Setting';\r\nimport DialogsContainer from './components/Dialogs/DialogsContainer';\r\nimport UserContainer from './components/Users/UsersContainer';\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className='grid'>\r\n      <Header/>\r\n      <AsideContainer/>\r\n      <div className='main-content'>\r\n        <Route exact path='/' component={Content}/>\r\n        <Route path='/profile' render={() => <Profile/>}/>\r\n        <Route path='/users' render={() => <UserContainer/>}/>\r\n        <Route path='/dialogs' render={() => <DialogsContainer/>}/>\r\n        <Route path='/setting' component={Setting}/>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n\r\n","let initialState = {\r\n  friendsData: [\r\n    {id: 1, ava: 'https://upload.wikimedia.org/wikipedia/commons/f/fa/Girl_in_blue_kimono.jpg', name: 'Mia'},\r\n    {\r\n      id: 2,\r\n      ava: 'https://nyppagesix.files.wordpress.com/2019/01/danielle-bergoli.jpg?quality=90&strip=all&w=618&h=410&crop=1',\r\n      name: 'Beverly'\r\n    },\r\n    {\r\n      id: 3,\r\n      ava: 'https://www.abc.net.au/radionational/image/8398028-3x2-700x467.jpg',\r\n      name: 'Rose'\r\n    },\r\n    {\r\n      id: 4,\r\n      ava: 'https://www.insideedition.com/sites/default/files/styles/931x523/public/images/2019-01/011819-mbginw-11280x720-.jpg?h=c673cd1c&itok=pcsqsVpJ',\r\n      name: 'Marilyn'\r\n    },\r\n    {\r\n      id: 5,\r\n      ava: 'https://atgbcentral.com/data/out/28/4129804-cute-girl-images.jpg',\r\n      name: 'Eva'\r\n    },\r\n  ],\r\n};\r\n\r\nconst asideReducer = (state = initialState, action) => {\r\n  return state;\r\n};\r\n\r\nexport default asideReducer;\r\n","import {combineReducers, createStore} from 'redux';\r\nimport dialogsReducer from './dialogs-reducer';\r\nimport profileReducer from './profile-reducer';\r\nimport asideReducer from './aside-reducer';\r\n\r\nlet reducers = combineReducers({\r\n  profilePage: profileReducer,\r\n  dialogsPage: dialogsReducer,\r\n  aside: asideReducer\r\n});\r\n\r\nlet store = createStore(reducers);\r\n\r\nexport default store;\r\n","import React from 'react';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from 'react-router-dom';\nimport App from './App';\nimport * as ReactDOM from 'react-dom';\nimport store from './redux/redux-store';\nimport {Provider} from 'react-redux';\n\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={store}>\n      <App/>\n    </Provider>\n  </BrowserRouter>,\ndocument.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}